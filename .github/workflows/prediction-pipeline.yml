name: Prediction Pipeline

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

permissions:
  contents: write

env:
  POWER_PLANT_API_URI: ${{ secrets.POWER_PLANT_API_URI }}
  WEATHER_API_URI: ${{ secrets.WEATHER_API_URI }}
  TIME_API_URI: ${{ secrets.TIME_API_URI }}
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
  DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
  MONGO_URI: ${{ secrets.MONGO_URI }}
  PRODUCTION_API_URI: ${{ secrets.PRODUCTION_API_URI }}
  PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
  PUSHER_APP_KEY: ${{ secrets.PUSHER_APP_KEY }}
  PUSHER_APP_SECRET: ${{ secrets.PUSHER_APP_SECRET }}
  PUSHER_APP_CLUSTER: ${{ secrets.PUSHER_APP_CLUSTER }}
  DAGSHUB_ACCESS_KEY_ID: ${{ secrets.DAGSHUB_ACCESS_KEY_ID }} 
  DAGSHUB_ACCESS_SECRET_KEY: ${{ secrets.DAGSHUB_ACCESS_SECRET_KEY }}
  DAGSHUB_REPO_URI: ${{ secrets.DAGSHUB_REPO_URI }}
  
jobs:
  prediction:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Prerequisites
        run: |
          python -m pip install --upgrade pip
          pip install poetry 
          pip install dvc[s3]

      - name: DVC setup
        run: |
          dvc remote modify origin --local access_key_id ${{ secrets.DVC_ACCESS_KEY_ID }}
          dvc remote modify origin --local secret_access_key ${{ secrets.DVC_SECRET_ACCESS_KEY }}
          dvc pull

      - name: Install dependencies
        run: |
          poetry lock --no-update
          poetry install --with dev --without dev-win

      - name: Run Data Api tests
        run: |
          poetry run poe test-data-api

      - name: Predict Power Production
        run: |
          poetry run poe predict-power-production
