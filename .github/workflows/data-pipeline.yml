name: Data Pipeline

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write

env:
  POWER_PLANT_API_URI: ${{ secrets.POWER_PLANT_API_URI }}
  WEATHER_API_URI: ${{ secrets.WEATHER_API_URI }}
  TIME_API_URI: ${{ secrets.TIME_API_URI }}
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
  DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}

jobs:
  main:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Prerequisites
        run: |
          python -m pip install --upgrade pip
          pip install poetry 
          pip install dvc[s3]

      - name: DVC setup
        run: |
          dvc remote modify origin --local access_key_id ${{ secrets.DVC_ACCESS_KEY_ID }}
          dvc remote modify origin --local secret_access_key ${{ secrets.DVC_SECRET_ACCESS_KEY }}
          dvc pull

      - name: Install dependencies
        run: |
          poetry install --with dev --without win-dev

      - name: Run Data Api tests
        run: |
          poetry run poe test-data-api

      - name: Fetch Power Plant data
        run: |
          poetry run poe fetch-power-plant-data

      - name: Fetch Weather data
        run: |
          poetry run poe fetch-weather-data

      - name: Process data
        run: |
          poetry run poe process-data

      - name: Feature Selection
        run: |
          poetry run poe select-features

#      - name: Prepare data for Validation
#        run: |
#          poetry run poe prepare-validation-data
#
#      - name: Run Great Expectations
#        run: |
#          poetry run poe validate-data
#
#      - name: Data Drift
#        run: |
#          poetry run poe data-drift
#
#      - name: Data Stability Test
#        run: |
#          poetry run poe data-stability-test
#
#      - name: Kolmogorov-Smirnov Test
#        run: |
#          poetry run poe ks-test

      - name: Add and Push to DVC
        run: |
          dvc add data/raw/fetched data/processed
          dvc push

      - name: Commit and Push files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git pull
          git diff-index --quiet HEAD || (git commit -a -m "action: fetch latest data" --allow-empty)
          git push

#      - name: Deploy DataDocs to Netlify
#        uses: nwtgck/actions-netlify@v1.2
#        with:
#          publish-dir: "reports"
#          production-deploy: true
#        env:
#          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
#          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}