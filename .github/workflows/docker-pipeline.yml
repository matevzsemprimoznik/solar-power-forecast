name: Docker Pipeline

on:
  workflow_dispatch:
    inputs:
      build_api:
        description: 'Build API'
        required: false
        default: true
        type: boolean
      build_ui:
        description: 'Build UI'
        required: false
        default: true
        type: boolean

permissions:
  contents: write

env:
  POWER_PLANT_API_URI: ${{ secrets.POWER_PLANT_API_URI }}
  WEATHER_API_URI: ${{ secrets.WEATHER_API_URI }}
  TIME_API_URI: ${{ secrets.TIME_API_URI }}
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
  DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
  MONGO_URI: ${{ secrets.MONGO_URI }}
  PRODUCTION_API_URI: ${{ secrets.PRODUCTION_API_URI }}

jobs:
  main:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Prerequisites
        run: |
          python -m pip install --upgrade pip
          pip install poetry 
          pip install dvc[s3]

      - name: DVC setup
        run: |
          dvc remote modify origin --local access_key_id ${{ secrets.DVC_ACCESS_KEY_ID }}
          dvc remote modify origin --local secret_access_key ${{ secrets.DVC_SECRET_ACCESS_KEY }}
          dvc pull -r origin --force

      - name: Install dependencies
        run: |
          poetry install --with dev --without dev-win

      - name: Get Latest Tag
        id: get_tag
        run: |
          TAG=$(git describe --abbrev=0)
          echo "TAG=$TAG" >> $GITHUB_ENV
        continue-on-error: true

      - name: Set Default Tag If Missing
        if: steps.get_tag.outcome != 'success'
        run: |
          echo "TAG=v1.0.0" >> $GITHUB_ENV

      - name: Docker Login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Docker Build Api
        if: github.event.inputs.build_api == 'true'
        run: docker build -t ${{secrets.DOCKER_REPO}}/${{secrets.DOCKER_IMAGE_API}}:$TAG -f src/apps/api/Dockerfile .

      - name: DockerHub Push Api
        if: github.event.inputs.build_api == 'true'
        run: docker push ${{secrets.DOCKER_REPO}}/${{secrets.DOCKER_IMAGE_API}}:$TAG

      - name: Docker Build UI
        if: github.event.inputs.build_ui == 'true'
        run: docker build -t ${{secrets.DOCKER_REPO}}/${{secrets.DOCKER_IMAGE_UI}}:$TAG --build-arg NEXT_PUBLIC_API_URL_ARG=${{ secrets.NEXT_PUBLIC_API_URL }} --build-arg NEXT_PUBLIC_MAPBOX_STYLE_ARG=${{ secrets.NEXT_PUBLIC_MAPBOX_STYLE }} --build-arg NEXT_PUBLIC_MAPBOX_TOKEN_ARG=${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }} ./src/client/mbajk-forecast

      - name: DockerHub Push UI
        if: github.event.inputs.build_ui == 'true'
        run: docker push ${{secrets.DOCKER_REPO}}/${{secrets.DOCKER_IMAGE_UI}}:$TAG
